<?php

use \Drupal\yelen_notification\Constante\Constante;

function yelen_theme_preprocess_views_view_unformatted(&$variables)
{
  if ($variables['view']->id() == 'yelen_search') {
    $variables['search_rating_form'] = \Drupal::formBuilder()->getForm('Drupal\orange_yelen_search\Form\SearchRatingForm');
  }
}

/**
 * Implémente hook_page_attachments_alter() pour ajouter un CSS spécifique à une page.
 */
function yelen_theme_page_attachments_alter(array &$attachments)
{
  // Vérifiez si la page correspond à un certain chemin.
  if (\Drupal::routeMatch()->getRouteName() === 'user.login' || \Drupal::routeMatch()->getRouteName() ==='view.frontpage.page_1') {
    // Ajoutez la bibliothèque CSS.
    $attachments['#attached']['library'][] = 'yelen_theme/popup_login';
  } else {
    // Retirez la bibliothèque si elle est ajoutée par défaut dans un preprocess, par exemple.
    unset($attachments['#attached']['library']['yelen_theme/popup_login']);
  }
}

/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function yelen_theme_preprocess_block(&$variables)
{
  if ($variables['elements']['#id'] == 'yelen_theme_trombino_point_service_page_1_search_form') {
    $config = \Drupal::config('orange_yelen_trombino.trombino_point_service_settings');
    $image_fid = $config->get('background_image');
    $image_url = '';

    if (!empty($image_fid)) {
      $file = \Drupal\file\Entity\File::load($image_fid[0]);
      if ($file) {
        $image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
      }
    }

    if (empty($image_url)) {
      $module_path = \Drupal::service('extension.path.resolver')->getPath('module', 'orange_yelen_trombino');
      $image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($module_path . '/images/search-form-bg.jpeg');
    }

    $variables['background_image_url'] = $image_url;
  }

}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function yelen_theme_preprocess_page(&$variables)
{
  $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
  $user_avatars = _yelen_get_user_avatar($user);
  $variables['user_display_image'] = $user_avatars['user_display_image'];
  $variables['user_small_image'] = $user_avatars['user_small_image'];


  // pour le footer
  $vid = 'menu_footer';

  $terms = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term')
    ->loadTree($vid, 0, NULL, TRUE);

  $menus = [];


  foreach ($terms as $term) {
    if (empty($term->parents[0])) {
      $menus[$term->id()] = [
        'title' => $term->getName(),
        'children' => []
      ];
    }
  }

  foreach ($terms as $term) {
    if (!empty($term->parents[0])) {
      $parent_id = $term->parents[0];
      if (isset($menus[$parent_id])) {
        $menus[$parent_id]['children'][] = [
          'title' => $term->getName(),
          'url' => $term->toUrl()->toString()
        ];
      }
    }
  }

  $variables['footer_menus'] = $menus;

}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */

function yelen_theme_preprocess_node(&$variables)
{
  $content_type = $variables['node']->type->getValue()[0]['target_id'];
  if (\Drupal::moduleHandler()->moduleExists('yelen_content_evaluation') && !in_array($content_type, Constante::UNAUTHORIZED_NODES)) {
    $variables['is_module_yelen_content_evaluation_active'] = true;
    if (isset($variables['node']) && $variables['node'] instanceof \Drupal\node\Entity\Node) {
      $nid = $variables['node']->id();
      $userId = \Drupal::currentUser()->id();
      $evaluations = \Drupal::service('evaluation.service')->getEvaluationOfUser($userId, $nid);
      if (empty($evaluations)) {
        $variables['evaluation'] = null;
        $variables['utility'] = null;
      } else {
        $evaluation = current($evaluations);
        $variables['utility'] = $evaluation->utility->value;
        $variables['evaluation'] = $evaluation->evaluation->value;
      }
    }

  }

}


function yelen_theme_preprocess_comment(&$variables): void{
  $comment = $variables['comment'];
  $comment_type = $comment->get('comment_type')->getValue()[0]['target_id'];

  if($comment_type === 'comment_forum'){
    $variables['attributes']['class'][] = 'yelen-forum-comment';

    $comment_time = $comment->getCreatedTime();
    $current_time = \Drupal::time()->getCurrentTime();
    $diff = $current_time - $comment_time;
    if ($diff < 60) {
      $variables['created'] = t('À l\'instant');
    }
    elseif ($diff < 3600) {
      $minutes = floor($diff / 60);
      $variables['created'] = t('Il y a @count min', ['@count' => $minutes]);
    }
    elseif ($diff < 86400) {
      $hours = floor($diff / 3600);
      $variables['created'] = t('Il y a @count h', ['@count' => $hours]);
    }
    elseif ($diff < 604800) {
      $days = floor($diff / 86400);
      if ($days == 1) {
        $variables['created'] = t('Hier');
      } else {
        $variables['created'] = t('Il y a @count j', ['@count' => $days]);
      }
    }
    else {
      $variables['created'] = \Drupal::service('date.formatter')
        ->format($comment_time, 'custom', 'j F Y à H:i');
    }

    $user = $comment->getOwner();
    $user_avatars = _yelen_get_user_avatar($user);
    $variables['user_display_image'] = $user_avatars['user_display_image'];
    $variables['user_small_image'] = $user_avatars['user_small_image'];
  }

}

function _yelen_get_user_avatar($userEntity): array{
  if ($userEntity && !$userEntity->user_picture->isEmpty()) {
    $uri = $userEntity->user_picture->entity->getFileUri();
    $user_display_image = \Drupal::service('file_url_generator')->generateAbsoluteString($uri);
    $style = \Drupal\image\Entity\ImageStyle::load('thumbnail');
    $image_uri = $style->buildUri($uri);
    $user_small_image = \Drupal::service('file_url_generator')->generateAbsoluteString($image_uri);
  } else {
    $user_display_image = '';
    $user_small_image = '';
  }

  return [
    'user_display_image' => $user_display_image,
    'user_small_image' => $user_small_image
  ];
}

