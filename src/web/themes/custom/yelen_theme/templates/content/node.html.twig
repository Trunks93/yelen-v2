{% import '@yelen_theme/macros/yelen-section-title.twig' as title %}
{% import '@yelen_theme/macros/yelen-display-category.twig' as badge %}
{% import '@yelen_theme/macros/yelen-display-icon-information.twig' as iconField %}
{% import '@yelen_theme/macros/yelen-display-buttonLink.twig' as link %}
{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}

{% set classes = [
  'node',
  'node--type-' ~ node.bundle|clean_class,
  node.isPromoted() ? 'node--promoted',
  node.isSticky() ? 'node--sticky',
  not node.isPublished() ? 'node--unpublished',
  view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
] %}
{{ attach_library('claro/classy.node') }}

{% if node.in_preview and node.id != null %}
  <div class="p-1">
    <a class="btn btn-primary" href="{{ path('entity.node.edit_form',{'node':node.id,'uuid': node.uuid.value}) }}">
      <i class="fa fa-arrow-left"> </i> {{ 'Retour aux modifications' | t }}</a>
  </div>
{% elseif node.in_preview %}
  <div class="p-1">
    <a class="btn btn-primary" href="javascript:void(0);" onclick="window.history.back();">
      <i class="fa fa-arrow-left"> </i> {{ 'Retour aux modifications' | t }}</a>
  </div>
{% endif %}

<article{{ attributes.addClass(classes) }}>
  {# title_prefix #}
  {# title_prefix #}

  {% if node.type.value[0]['target_id'] != 'page' %}
    {{ title.render(label, 'h2', title_attributes) }}
  {% elseif label and not page %}
    {% embed '@yelen_theme/components/yelen-section-title.html.twig' with { tag: 'h2', attributes: title_attributes } %}
      {% block content %}
        <a href="{{ url }}" rel="bookmark">{{ label }}</a>
      {% endblock %}
    {% endembed %}
  {% endif %}
  {#  title_suffix #}


  {% if display_submitted %}
    <footer class="node__meta">
      {{ author_picture }}
      <div{{ author_attributes.addClass('node__submitted') }}>
        {% trans %}Written {# author_name #} on {{ date }}{% endtrans %}
        {{ metadata }}
      </div>
    </footer>
  {% endif %}

  {% set category =  content.field_categorie_argumentaire ??
    content.field_categorie ??
    content.field_categorie_certification ??
    content.field_categorie_culture_client ??
    content.field_types_de_point_service ??
    content.field_categorie_process_metier ??
    content.field_categorie_faq ??
    content.field_domaine
  %}

  <div{{ content_attributes.addClass('node__content') }}>
    {{ content.field_image }}
    {{ content.field_images_d_illustration }}
    {{ badge.render(category,"label-orange") }}
    {{ badge.render(content.field_marque,"label-dark") }}
    {{ badge.render(content.field_type_d_actu,"label-dark") }}


    {% if content.field_prix %}
      {% set price_info = content.field_prix[0]['#markup']|split(' ') %}
      <div class="float-end texte-orange" style="margin-top: 20px; font-size: 18px;">
        <b>{{ price_info[0]|number_format(0, '.', ' ') }} {{ price_info[1] }}</b>
      </div>
    {% endif %}

    <br>

    {{ content.body }}

    <br>
    {% if content.field_nom_prenom_chef_de_produit and content.field_contact_chef_de_produit %}
      <div class="mt-3 mb-3">
        <div class="row">
          {% if content.field_nom_prenom_chef_de_produit['#theme'] is defined %}
            <div class="col-6">
              {{ iconField.render(content.field_nom_prenom_chef_de_produit,'fa fa-user') }}
            </div>
          {% endif %}
          {% if content.field_contact_chef_de_produit['#theme'] is defined %}
            <div class="col-6">
              {{ iconField.render(content.field_contact_chef_de_produit,'fa fa-phone') }}
            </div>
          {% endif %}
        </div>
      </div>
    {% endif %}
    {% if content.field_nom_prenom_du_chef_second and content.field_contact_chef_secondaire %}
      <div class="mt-3 mb-3">
        <div class="row">
          {% if content.field_nom_prenom_du_chef_second['#theme'] is defined %}
            <div class="col-6">
              {{ iconField.render(content.field_nom_prenom_du_chef_second,'fa fa-user') }}
            </div>
          {% endif %}
          {% if content.field_contact_chef_secondaire['#theme'] is defined %}
            <div class="col-6">
              {{ iconField.render(content.field_contact_chef_secondaire,'fa fa-phone') }}
            </div>
          {% endif %}
        </div>
      </div>
    {% endif %}

    <br>

    {% if content.field_lien %}
      {{ link.render(content.field_lien) }}
    {% endif %}

    <br>
    {{ content | without('field_categorie_faq',
      'field_marque',
      'field_prix',
      'field_categorie',
      'field_categorie_culture_client',
      'field_categorie_certification',
      'field_categorie_argumentaire',
      'field_categorie_process_metier',
      'field_types_de_point_service',
      'field_liste_de_diffusion',
      'field_image',
      'body',
      'field_lien',
      'field_couleur_entete',
      'field_domaine',
      'field_type_d_actu'
    ) }}


    {#
    {{ content |without('field_liste_de_diffusion') }}



    {{ content.field_image }}
    {{ content.body }}
    {{ content.field_categorie_process_metier }}
    {{ content.field_prix }}
    {{ content.field_images }}
    {{ content.field_videos }}
    {{ content.commentaires }}
    {{ content.field_process }}
    {{ content.field_files }}
    {{ content.field_modes_op }}
    {{ content.field_process_parcours_client }}
    {{ content.field_nom }}
    {{ content.field_prenom }}
    {{ content.field_matricule}}
    {{ content.field_service }}
    {{ content.field_contact }}
    {{ content.field_mail }}
    {{ content.field_commentaire }}
    {{ content.field_direction}}
    {{ content.field_documents }}
    {{ content.field_document }}
    #}
    {# content.field_image }}
      {% if content['body']['#object'] is defined and content['body']['#object'].type.value[0]['target_id'] != 'page'  %}
        <hr>
      {% endif %}
      {{ content.field_process }}
      {{ content.field_files }}
      {{ content.field_modes_operatoires }}
      {{ content.field_documents #}

  </div>

  {% if is_module_yelen_content_evaluation_active is defined %}
    {% if utility == null or utility == "none" %}
      <div class="utility_forms mt-3">
        {{ drupal_form('Drupal\\yelen_content_evaluation\\Form\\UtilityContentForm',node.id) }}
      </div>
    {% else %}
      {% if evaluation == null %}
        <div class="mt-3">
          {{ drupal_form('Drupal\\yelen_content_evaluation\\Form\\EvaluationContentForm',node.id) }}
        </div>
      {% endif %}
    {% endif %}
  {% endif %}

</article>
