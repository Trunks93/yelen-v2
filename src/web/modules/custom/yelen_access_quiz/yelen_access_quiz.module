<?php


declare(strict_types=1);


use Drupal\quiz\Entity\QuizFeedbackType;
use Drupal\yelen_notification\Constante\Constante;
use Drupal\Core\Entity\EntityInterface;
use Drupal\yelen_notification\Event\QuizNotificationEvent;

//use function quiz_get_feedback_options;

/**
 * Implements hook_theme()
 */

function yelen_access_quiz_theme()
{
  return [
    'quiz_result_score' => [
      'variables' => [
        'content' => NULL,
      ],
    ],

  ];
}

/**
 * Implements hook_entity_update().
 */
function yelen_access_quiz_quiz_update(EntityInterface $entity)
{
  $current_state = $entity->moderation_state->getValue()[0]['target_id'];
  $date = !empty($entity->quiz_date->getValue()) ? $entity->quiz_date->getValue()[0] : [];
  $description = !empty($entity->body->getValue()) ? $entity->body->getValue()[0]['value'] : null;
  $emailExtractorService = \Drupal::service('yelen_notification.extract.mail');
  $emails = $emailExtractorService->extractMailFromBroadcastList($entity, 'field_liste_de_diffusion');
  if ($current_state == Constante::PUBLISHED) {
    $event = new QuizNotificationEvent($entity->id(), $entity->label(), $emails, $date);
    $event->setDescription($description);
    $event_dispatcher = \Drupal::service('event_dispatcher');
    $event_dispatcher->dispatch($event, QuizNotificationEvent::PUBLISH_QUIZ);
  }
}


/**
 * Implements hook_form_alter
 * Ce hook me permet de surcharger le formulaire de création de quiz avec les elements de la configuration
 * au niveau de la manière d'afficher les stats après le quiz et après les questions
 */

function yelen_access_quiz_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
  if ($form_id == 'quiz_quiz_form') {
    if (\Drupal::moduleHandler()->moduleExists('quiz')) {
      \Drupal::moduleHandler()->loadInclude('quiz', 'module');
      $review_options = quiz_get_feedback_options();
      $config = \Drupal::config('quiz.settings');
      foreach (QuizFeedbackType::loadMultiple() as $key => $when) {

        $items = (array)$config->get("admin_review_options_$key");
        $selected = [];
        foreach ($items as $item_name => $item) {
          if ($item === TRUE) {
            $selected[$item_name] = $item_name;
          }
        }

        $form['question_feedback']['review_options'][$key] = [
          '#title' => $when->label(),
          '#description' => $when->get('description'),
          '#type' => 'checkboxes',
          '#options' => $review_options,
          '#default_value' => $selected,
        ];
      }
    }
  }
}
